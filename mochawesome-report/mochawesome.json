{
  "stats": {
    "suites": 7,
    "tests": 12,
    "passes": 10,
    "pending": 0,
    "failures": 2,
    "start": "2021-11-09T14:48:25.097Z",
    "end": "2021-11-09T14:48:25.204Z",
    "duration": 107,
    "testsRegistered": 12,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "32cc14c4-89bf-421b-92de-3ffefdec9466",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f6354e6f-71e2-44bb-8589-76d1583c96ce",
          "title": "Tasks API",
          "fullFile": "D:\\Workspace\\API TEST\\node-mocha-chai\\test\\task.js",
          "file": "\\test\\task.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "96bbbbf2-1f14-480b-8563-94935b274262",
              "title": "GET /api/tasks",
              "fullFile": "D:\\Workspace\\API TEST\\node-mocha-chai\\test\\task.js",
              "file": "\\test\\task.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should GET all the tasks",
                  "fullTitle": "Tasks API GET /api/tasks It should GET all the tasks",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get(\"/api/tasks\")\n    .end((err, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('array');\n        response.body.length.should.be.eq(3);\n        done();\n    });",
                  "err": {
                    "message": "AssertionError: expected 4 to equal 3",
                    "estack": "AssertionError: expected 4 to equal 3\n    at D:\\Workspace\\API TEST\\node-mocha-chai\\test\\task.js:22:52\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:716:12)\n    at D:\\Workspace\\API TEST\\node-mocha-chai\\node_modules\\superagent\\lib\\node\\index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1317:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                    "diff": "- 4\n+ 3\n"
                  },
                  "uuid": "8e6b40a2-530e-40e4-af65-3cda8ff3abf5",
                  "parentUUID": "96bbbbf2-1f14-480b-8563-94935b274262",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT GET all the tasks",
                  "fullTitle": "Tasks API GET /api/tasks It should NOT GET all the tasks",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get(\"/api/task\")\n    .end((err, response) => {\n        response.should.have.status(404);\n        done();\n    });",
                  "err": {},
                  "uuid": "c05620d1-16bb-4e0d-85a0-7bdd25781808",
                  "parentUUID": "96bbbbf2-1f14-480b-8563-94935b274262",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c05620d1-16bb-4e0d-85a0-7bdd25781808"
              ],
              "failures": [
                "8e6b40a2-530e-40e4-af65-3cda8ff3abf5"
              ],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "203f856c-b189-4977-a977-3e63ad13b83d",
              "title": "GET /api/tasks/:id",
              "fullFile": "D:\\Workspace\\API TEST\\node-mocha-chai\\test\\task.js",
              "file": "\\test\\task.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should GET a task by ID",
                  "fullTitle": "Tasks API GET /api/tasks/:id It should GET a task by ID",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 1;\nchai.request(server)\n    .get(\"/api/tasks/\" + taskId)\n    .end((err, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('id');\n        response.body.should.have.property('name');\n        response.body.should.have.property('completed');\n        response.body.should.have.property('id').eq(1);\n        done();\n    });",
                  "err": {},
                  "uuid": "7d5cf621-d3d3-47f3-9c18-f68831363a12",
                  "parentUUID": "203f856c-b189-4977-a977-3e63ad13b83d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT GET a task by ID",
                  "fullTitle": "Tasks API GET /api/tasks/:id It should NOT GET a task by ID",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 123;\nchai.request(server)\n    .get(\"/api/tasks/\" + taskId)\n    .end((err, response) => {\n        response.should.have.status(404);\n        response.text.should.be.eq(\"The task with the provided ID does not exist.\");\n        done();\n    });",
                  "err": {},
                  "uuid": "cb34108a-71ff-4616-92ad-e84b59af03f7",
                  "parentUUID": "203f856c-b189-4977-a977-3e63ad13b83d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d5cf621-d3d3-47f3-9c18-f68831363a12",
                "cb34108a-71ff-4616-92ad-e84b59af03f7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6bb8e1bc-28da-4d91-a08a-c032f0dfbc89",
              "title": "POST /api/tasks",
              "fullFile": "D:\\Workspace\\API TEST\\node-mocha-chai\\test\\task.js",
              "file": "\\test\\task.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should POST a new task",
                  "fullTitle": "Tasks API POST /api/tasks It should POST a new task",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const task = {\n    name: \"Task 4\",\n    completed: false\n};\nchai.request(server)\n    .post(\"/api/tasks\")\n    .send(task)\n    .end((err, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('id').eq(4);\n        response.body.should.have.property('name').eq(\"Task 4\");\n        response.body.should.have.property('completed').eq(false);\n        done();\n    });",
                  "err": {
                    "message": "AssertionError: expected 5 to equal 4",
                    "estack": "AssertionError: expected 5 to equal 4\n    at D:\\Workspace\\API TEST\\node-mocha-chai\\test\\task.js:87:62\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:716:12)\n    at D:\\Workspace\\API TEST\\node-mocha-chai\\node_modules\\superagent\\lib\\node\\index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1317:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                    "diff": "- 5\n+ 4\n"
                  },
                  "uuid": "686de73b-e758-4103-9f87-81823ccb8f76",
                  "parentUUID": "6bb8e1bc-28da-4d91-a08a-c032f0dfbc89",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT POST a new task without the name property",
                  "fullTitle": "Tasks API POST /api/tasks It should NOT POST a new task without the name property",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const task = {\n    completed: false\n};\nchai.request(server)\n    .post(\"/api/tasks\")\n    .send(task)\n    .end((err, response) => {\n        response.should.have.status(400);\n        response.text.should.be.eq(\"The name should be at least 3 chars long!\");\n        done();\n    });",
                  "err": {},
                  "uuid": "4e715667-a4ad-4ac0-a723-91e7713b3b41",
                  "parentUUID": "6bb8e1bc-28da-4d91-a08a-c032f0dfbc89",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e715667-a4ad-4ac0-a723-91e7713b3b41"
              ],
              "failures": [
                "686de73b-e758-4103-9f87-81823ccb8f76"
              ],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "18dd0c37-4d29-4249-8b34-2444f5a98de8",
              "title": "PUT /api/tasks/:id",
              "fullFile": "D:\\Workspace\\API TEST\\node-mocha-chai\\test\\task.js",
              "file": "\\test\\task.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should PUT an existing task",
                  "fullTitle": "Tasks API PUT /api/tasks/:id It should PUT an existing task",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 1;\nconst task = {\n    name: \"Task 1 changed\",\n    completed: true\n};\nchai.request(server)\n    .put(\"/api/tasks/\" + taskId)\n    .send(task)\n    .end((err, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('id').eq(1);\n        response.body.should.have.property('name').eq(\"Task 1 changed\");\n        response.body.should.have.property('completed').eq(true);\n        done();\n    });",
                  "err": {},
                  "uuid": "d19ea000-daae-4287-b3ef-442c3778a6a1",
                  "parentUUID": "18dd0c37-4d29-4249-8b34-2444f5a98de8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT PUT an existing task with a name with less than 3 characters",
                  "fullTitle": "Tasks API PUT /api/tasks/:id It should NOT PUT an existing task with a name with less than 3 characters",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 1;\nconst task = {\n    name: \"Ta\",\n    completed: true\n};\nchai.request(server)\n    .put(\"/api/tasks/\" + taskId)\n    .send(task)\n    .end((err, response) => {\n        response.should.have.status(400);\n        response.text.should.be.eq(\"The name should be at least 3 chars long!\");\n        done();\n    });",
                  "err": {},
                  "uuid": "0e7dba6a-2208-4dc4-b990-951e4dfbc380",
                  "parentUUID": "18dd0c37-4d29-4249-8b34-2444f5a98de8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d19ea000-daae-4287-b3ef-442c3778a6a1",
                "0e7dba6a-2208-4dc4-b990-951e4dfbc380"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d9e11968-66ab-4e6f-9802-a2597feec2e4",
              "title": "PATCH /api/tasks/:id",
              "fullFile": "D:\\Workspace\\API TEST\\node-mocha-chai\\test\\task.js",
              "file": "\\test\\task.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should PATCH an existing task",
                  "fullTitle": "Tasks API PATCH /api/tasks/:id It should PATCH an existing task",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 1;\nconst task = {\n    name: \"Task 1 patch\"\n};\nchai.request(server)\n    .patch(\"/api/tasks/\" + taskId)\n    .send(task)\n    .end((err, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('id').eq(1);\n        response.body.should.have.property('name').eq(\"Task 1 patch\");\n        response.body.should.have.property('completed').eq(true);\n        done();\n    });",
                  "err": {},
                  "uuid": "014600af-3a95-46e2-92a0-38800eee325c",
                  "parentUUID": "d9e11968-66ab-4e6f-9802-a2597feec2e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT PATCH an existing task with a name with less than 3 characters",
                  "fullTitle": "Tasks API PATCH /api/tasks/:id It should NOT PATCH an existing task with a name with less than 3 characters",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 1;\nconst task = {\n    name: \"Ta\"\n};\nchai.request(server)\n    .patch(\"/api/tasks/\" + taskId)\n    .send(task)\n    .end((err, response) => {\n        response.should.have.status(400);\n        response.text.should.be.eq(\"The name should be at least 3 chars long!\");\n        done();\n    });",
                  "err": {},
                  "uuid": "ec9d7f3b-3ae3-4e76-97b0-b0aa57fe9eff",
                  "parentUUID": "d9e11968-66ab-4e6f-9802-a2597feec2e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "014600af-3a95-46e2-92a0-38800eee325c",
                "ec9d7f3b-3ae3-4e76-97b0-b0aa57fe9eff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "abaec540-3e37-4e54-a328-15a6af0919fd",
              "title": "DELETE /api/tasks/:id",
              "fullFile": "D:\\Workspace\\API TEST\\node-mocha-chai\\test\\task.js",
              "file": "\\test\\task.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should DELETE an existing task",
                  "fullTitle": "Tasks API DELETE /api/tasks/:id It should DELETE an existing task",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 1;\nchai.request(server)\n    .delete(\"/api/tasks/\" + taskId)\n    .end((err, response) => {\n        response.should.have.status(200);\n        done();\n    });",
                  "err": {},
                  "uuid": "94520c93-bced-413f-bcb5-bec3495de59a",
                  "parentUUID": "abaec540-3e37-4e54-a328-15a6af0919fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT DELETE a task that is not in the database",
                  "fullTitle": "Tasks API DELETE /api/tasks/:id It should NOT DELETE a task that is not in the database",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 145;\nchai.request(server)\n    .delete(\"/api/tasks/\" + taskId)\n    .end((err, response) => {\n        response.should.have.status(404);\n        response.text.should.be.eq(\"The task with the provided ID does not exist.\");\n        done();\n    });",
                  "err": {},
                  "uuid": "d967ab03-3f5e-4f3d-a308-086a39fef3e7",
                  "parentUUID": "abaec540-3e37-4e54-a328-15a6af0919fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "94520c93-bced-413f-bcb5-bec3495de59a",
                "d967ab03-3f5e-4f3d-a308-086a39fef3e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}